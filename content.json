{"meta":{"title":"尛孟の博客","subtitle":"想法总是无法付诸实践…","description":"与人联系甚少","author":"尛孟","url":"http://yoursite.com"},"pages":[{"title":"categories","date":"2018-01-04T10:07:23.000Z","updated":"2018-01-04T10:08:23.000Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-01-04T10:07:33.000Z","updated":"2018-01-04T10:08:39.000Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"about","date":"2018-01-04T10:07:40.000Z","updated":"2018-01-04T10:08:48.000Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""}],"posts":[{"title":"Hello World","slug":"hello-world","date":"2018-01-03T09:39:59.000Z","updated":"2018-01-03T09:39:59.000Z","comments":true,"path":"2018/01/03/hello-world/","link":"","permalink":"http://yoursite.com/2018/01/03/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"+load和+initialize的区别","slug":"new-article","date":"2016-03-26T03:24:00.000Z","updated":"2018-01-08T05:27:08.000Z","comments":true,"path":"2016/03/26/new-article/","link":"","permalink":"http://yoursite.com/2016/03/26/new-article/","excerpt":"","text":"######在不考虑一切继承、分类的最简单最普通的情况下： 调用时刻: load:程序启动时,类被加载进内存就调用initialize:当第一次使用这个类或者其子类就会调用 调用次数 load:因为加载进内存只会加载一次，所以也只会调用一次initialize:不确定,具体根据子类和具体调用情况比如有个类,它有一个子类,第一次使用子类时,父类的initialize会被调用2次 ######上面说的只是普通情况。但是呢，一个类可能继承于某个super类，还有可能有自己的分类，如果分类中也实现了load方法，它们的调用顺序是怎么样的呢？ 这里需要知道—&gt;覆盖方法在分类中的体现如果父类本身中的方法在子类中被重写，则会优先执行子类中的方法如果类本身中的方法在分类中被重写，则会优先执行分类中的方法 ######但是这里必须要知道一个特例-&gt;+load 系统首先会调用 super类的load方法，然后再调用该类自身的load方法，再次才会调用该类的分类重写的load方法，也即是说整个继承链包括分类扩展中的load方法都会被执行，只是执行顺序需要关注一下。 #####也就是说，假如你重写了某个类的load方法，同时又在该类的分类中也重写了load方法，你就会发现这个类的load被调用了两次。","categories":[],"tags":[]}]}